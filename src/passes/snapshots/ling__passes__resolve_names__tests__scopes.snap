---
source: src/passes/resolve_names.rs
expression: "test_resolve(\"func foo() { loop { let a = 12; } a;}\")"
---
(
    Module {
        items: [
            Func(
                Func {
                    ident: Resolved(
                        SymbolId(
                            2,
                        ),
                    ),
                    ty_params: [],
                    params: [],
                    ret_ty: Unit,
                    body: Block {
                        stmts: [
                            Loop(
                                Block {
                                    stmts: [
                                        Declaration {
                                            lhs: Resolved(
                                                SymbolId(
                                                    3,
                                                ),
                                            ),
                                            rhs: Const(
                                                ConstIdx(
                                                    0,
                                                ),
                                            ),
                                        },
                                    ],
                                    final_expr: Unit,
                                },
                            ),
                            Expr(
                                Var(
                                    Simple(
                                        Unresolved(
                                            u!("a"),
                                        ),
                                    ),
                                ),
                            ),
                        ],
                        final_expr: Unit,
                    },
                },
            ),
        ],
    },
    SymbolTable {
        symbol_lookup: [
            Symbol {
                ident: u!("int"),
                kind: TyStruct,
            },
            Symbol {
                ident: u!("uint"),
                kind: TyStruct,
            },
            Symbol {
                ident: u!("foo"),
                kind: Function,
            },
            Symbol {
                ident: u!("a"),
                kind: Var,
            },
        ],
    },
    [
        SymbolNotFound(
            u!("a"),
        ),
    ],
)
