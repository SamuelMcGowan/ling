---
source: src/passes/resolve_names.rs
expression: "test_resolve(\"enum Result[T, E] { Ok(T), Err(E), }\")"
---
(SymbolTable(
  symbols: [
    Symbol(
      ident: "int",
      kind: TyStruct(Builtin),
    ),
    Symbol(
      ident: "uint",
      kind: TyStruct(Builtin),
    ),
    Symbol(
      ident: "Result",
      kind: TyEnum(Ast(Enum(
        ident: Resolved(SymbolId(2)),
        ty_params: [
          Resolved(SymbolId(3)),
          Resolved(SymbolId(4)),
        ],
        variants: [
          EnumVariant(
            name: "Ok",
            kind: Tuple([
              Constructed(
                ident: Resolved(SymbolId(3)),
                params: [],
              ),
            ]),
          ),
          EnumVariant(
            name: "Err",
            kind: Tuple([
              Constructed(
                ident: Resolved(SymbolId(4)),
                params: [],
              ),
            ]),
          ),
        ],
      ))),
    ),
    Symbol(
      ident: "T",
      kind: TyParam,
    ),
    Symbol(
      ident: "E",
      kind: TyParam,
    ),
  ],
  globals: {
    "Result": (Global, SymbolId(2)),
    "int": (Builtin, SymbolId(0)),
    "uint": (Builtin, SymbolId(1)),
  },
), "")
